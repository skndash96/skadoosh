<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Skadoosh App - Everything </title>
    <%- include("partials/head") %>
  </head>
  <body>
    <%- include("partials/header") %>

    <section class="p-8 relative w-fit mx-auto flex flex-col justify-center items-center min-h-screen">
      <div id="spinner" class="ml-4 inline-block">
        <i class="mr-2 fa-solid fa-spinner animate-spin"></i>Loading...
      </div>
      
      <div id="main"></div>
    </section>

    <%- include("partials/footer") %>

    <script defer src="https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js"></script>
    <script defer src="https://www.gstatic.com/firebasejs/8.10.1/firebase-analytics.js"></script>
    <script defer src="https://www.gstatic.com/firebasejs/8.10.1/firebase-firestore.js"></script>
    <script defer src="https://www.gstatic.com/firebasejs/8.10.1/firebase-auth.js"></script>
    <script src="scripts/notif.js"></script>
    <script>
      window.addEventListener("load", () => {
        const firebaseConfig = {
          apiKey: "AIzaSyAbrxNYwxP1g41as5eWyyVXUn8kgXGWCVg",
          authDomain: "skadoosh-4ed25.firebaseapp.com",
          projectId: "skadoosh-4ed25",
          storageBucket: "skadoosh-4ed25.appspot.com",
          messagingSenderId: "24206697274",
          appId: "1:24206697274:web:749eef0943789268aa2603",
          measurementId: "G-32SBQ3DV8V"
        }
    
        const app = firebase.initializeApp(firebaseConfig)
        const analytics = firebase.analytics(app)
        const db = firebase.firestore(app)
        const auth = firebase.auth(app)

        const spinner = document.getElementById("spinner")
        const main = document.getElementById("main")
        
        auth.onAuthStateChanged(u => {
          if (!u) window.location.replace("/auth")
          else loadApp()
        })

        let user
        
        async function loadApp() {
          try {
            let uDoc = await db.collection("users").doc(auth.currentUser.uid).get()
            user = uDoc.exists ? uDoc.data() : { since: new Date() }
            if(!uDoc.exists) {
              await uDoc.ref.set(user)
              await auth.updateUserProfile({ displayName: "User"+Math.ceil(Math.random()*1000) })
            }
            user.displayName = auth.currentUser.displayName
            user.photoURL = auth.currentUser.photoURL || "images/hero.webp"

            const profEl = document.createElement("div")
            profEl.innerHTML = `<img class="mr-2 w-6 h-6 inline-block rounded-full" src="${user.photoURL}" alt="PFP"> ${user.displayName}`
            document.getElementById("navProf").replaceChildren(profEl)
            document.getElementById("nav").querySelectorAll("button[name]").forEach(b => b.addEventListener("click", e => loadPage(e.target.name)))
            document.getElementById("signout").addEventListener("click", () => auth.signOut().catch(e => console.error(e)))
          } catch(e) {
            console.error(e)
          } finally {
            loadPage("main", false)
          }
        }
        
        function loadPage(i) {
          spinner.classList.remove("hidden")
          main.replaceChildren("This is the "+i+" page.")
          spinner.classList.add("hidden")
        }
      })
    </script>
</body>
</html>